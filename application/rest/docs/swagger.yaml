basePath: /api/v1
definitions:
  rest.Employee:
    properties:
      created_at:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      enabled:
        type: boolean
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      pis:
        type: string
      username:
        type: string
    required:
    - email
    - email_verified
    - enabled
    - first_name
    - last_name
    - pis
    - username
    type: object
  rest.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      error:
        example: status bad request
        type: string
    type: object
  rest.HTTPResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: a message
        type: string
    type: object
  rest.PasswordInfo:
    properties:
      password:
        example: meypassword
        type: string
      temporary:
        example: false
        type: boolean
    type: object
info:
  contact:
    email: contato@coding4u.com.br
    name: Coding4u
  description: Swagger API for Golang Project Employee.
  termsOfService: http://swagger.io/terms/
  title: Employee Swagger API
  version: "1.0"
paths:
  /employees:
    post:
      consumes:
      - application/json
      description: create employee
      operationId: createEmployee
      parameters:
      - description: JSON body to create a new employee
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.Employee'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      summary: create a employee
      tags:
      - Employee
  /employees/{id}:
    get:
      consumes:
      - application/json
      description: Router for find a employee
      operationId: findEmployee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      summary: find a employee
      tags:
      - Employee
  /employees/{id}/password:
    put:
      consumes:
      - application/json
      description: Router for set a employee password
      operationId: setPassword
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: string
      - description: JSON body to set a employee password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.PasswordInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      summary: set a employee password
      tags:
      - Employee
swagger: "2.0"
